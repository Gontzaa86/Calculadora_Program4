#include <stdio.h>
#include "sqlite3.h"

// Funci칩n de callback para manejar los resultados de las consultas SQL
static int callback(void *NotUsed, int argc, char **argv, char **azColName){
    int i;
    for(i = 0; i < argc; i++){
        printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");
    }
    printf("\n");
    return 0;
}

int main(int argc, char* argv[]) {
    sqlite3 *db;
    char *zErrMsg = 0;
    int rc;

    // Abrir la conexi칩n a la base de datos
    rc = sqlite3_open("database.db", &db);
    if (rc) {
        fprintf(stderr, "No se puede abrir la base de datos: %s\n", sqlite3_errmsg(db));
        return(0);
    } else {
        fprintf(stderr, "Base de datos abierta exitosamente\n");
    }

    // Crear la tabla Usuario
    const char *sql_usuario = "CREATE TABLE Usuario (" \
                              "Nombre TEXT PRIMARY KEY NOT NULL," \
                              "contrase침a TEXT);";

    // Crear la tabla Menu_Operacion
    const char *sql_menu_operacion = "CREATE TABLE Menu_Operacion (" \
                                     "ID_Operacion INTEGER PRIMARY KEY NOT NULL," \
                                     "Nombre_Operacion TEXT);";

    // Crear la tabla Operacion
    const char *sql_operacion = "CREATE TABLE Operacion (" \
                                "Operando1 INTEGER," \
                                "Operando2 INTEGER," \
                                "Resultado INTEGER," \
                                "Fecha TEXT PRIMARY KEY NOT NULL," \
                                "Nombre TEXT," \
                                "ID_Operacion INTEGER," \
                                "FOREIGN KEY (Nombre) REFERENCES Usuario(Nombre)," \
                                "FOREIGN KEY (ID_Operacion) REFERENCES Menu_Operacion(ID_Operacion));";

    // Ejecutar las consultas SQL para crear las tablas
    rc = sqlite3_exec(db, sql_usuario, callback, 0, &zErrMsg);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error SQL al crear la tabla Usuario: %s\n", zErrMsg);
        sqlite3_free(zErrMsg);
    } else {
        fprintf(stdout, "Tabla Usuario creada exitosamente\n");
    }

    rc = sqlite3_exec(db, sql_menu_operacion, callback, 0, &zErrMsg);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error SQL al crear la tabla Menu_Operacion: %s\n", zErrMsg);
        sqlite3_free(zErrMsg);
    } else {
        fprintf(stdout, "Tabla Menu_Operacion creada exitosamente\n");
    }

    rc = sqlite3_exec(db, sql_operacion, callback, 0, &zErrMsg);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Error SQL al crear la tabla Operacion: %s\n", zErrMsg);
        sqlite3_free(zErrMsg);
    } else {
        fprintf(stdout, "Tabla Operacion creada exitosamente\n");
    }

    // Cerrar la conexi칩n a la base de datos
    sqlite3_close(db);
    return 0;
}